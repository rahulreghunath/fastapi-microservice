version: '3'

networks:
  fastapi:

volumes:
  etcd_data:
    driver: local

services:  
  payment:
    build:
      context: .
      dockerfile: payment/python.dockerfile
      args:
        - USER_ID=1000
        - GROUP_ID=1000              
    command: "uvicorn payment.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./payment:/home/fastapi/code/payment/
    ports:
      - "8000:8000"
    networks:
      - fastapi
  inventory:
    build:
      context: .
      dockerfile: inventory/python.dockerfile
      args:
        - USER_ID=1000
        - GROUP_ID=1000
    command: "uvicorn inventory.main:app --host 0.0.0.0 --port 8001 --reload"
    volumes:
      - ./inventory:/home/fastapi/code/inventory/
    ports:
      - "8001:8001"
    networks:
      - fastapi
  # Authentication Service
  authentication:
    build:
      context: .
      dockerfile: authentication/python.dockerfile
      args:
        - USER_ID=1000
        - GROUP_ID=1000
    command: "uvicorn authentication.main:app --host 0.0.0.0 --port 8001 --reload"
    volumes:
      - ./authentication:/home/fastapi/code/authentication/
    ports:
      - "8003:8001"
    networks:
      - fastapi

  postgres_inventory:
    image: postgres:10.4
    volumes:
      - ./docker/volumes/.inventory_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
    networks:
      - fastapi
  postgres_payment:
    image: postgres:10.4
    volumes:
      - ./docker/volumes/.payment_postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=password
    networks:
      - fastapi
  postgres_authentication:
    image: postgres:10.4
    volumes:
      - ./docker/volumes/.postgres_authentication:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_PASSWORD=password
    networks:
      - fastapi
  redis:
    image: redis/redis-stack
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./docker/volumes/.redis-data/:/data
    ports:
      - "8002:8001"
      - "6379:6379"
    networks:
      - fastapi

  apisix-dashboard:
    image: apache/apisix-dashboard:2.13-alpine
    volumes:
    - ./docker/apisix/dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    ports:
    - "9000:9000"
    networks:
      fastapi:

  apisix:
    image: apache/apisix:3.0.0-debian
    volumes:
      - ./docker/apisix/apisix_log:/usr/local/apisix/logs
      - ./docker/apisix/apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ##network_mode: host
    ports:
      - "9180:9180/tcp"
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
      - "9092:9092/tcp"
    networks:
      fastapi:

  etcd:
    image: bitnami/etcd:3.4.15
    volumes:
      - etcd_data:/bitnami/etcd
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    ports:
      - "2379:2379/tcp"
    networks:
      fastapi:

  vault:
    image: vault
    ports:
      - "8200:8200"
      - "1234:1234"
    volumes:
        - ./docker/vault/config:/vault/config
        - ./docker/vault/policies:/vault/policies
        - ./docker/vault/data:/vault/data
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_TOKEN=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:1234
      - VAULT_ADDR=http://0.0.0.0:1234
    cap_add:
      - IPC_LOCK
    networks:
      fastapi:
