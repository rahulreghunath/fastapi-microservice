[GLOBAL]
use_deprecated_directory_cli_args_semantics = true
pants_version = "2.14.0"
backend_packages = [
    "pants.backend.python",
    "pants.backend.python.lint.docformatter",
    "pants.backend.python.lint.pylint",
    "pants.backend.python.typecheck.mypy",
    "pants.backend.python.lint.black",
    "pants.backend.experimental.python"
]
[anonymous-telemetry]
enabled = false
[python]
interpreter_constraints = ["==3.9.*"]
enable_resolves = true
resolves = { python-default = "python-default.lock"}
tailor_pex_binary_targets = false
[python-bootstrap]
search_path = ["<PATH>", "<PYENV>"]
[source]
root_patterns = ["/"]
[pytest]
lockfile = "lockfiles/pytest.lock"
extra_requirements.add = [
  "schema",
  "fastapi",
  "requests",
  "sqlalchemy",
  "python-jose",
  "passlib",
  "python-multipart",
]
[python-infer]
# Infer dependencies from strings that look like module/class names, such as are often
# found in settings.py, where dependencies are enumerated as strings and not directly imported.
string_imports = true